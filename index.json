{
  "api/XRC.Core.Utilities.DebugPublisher.html": {
    "href": "api/XRC.Core.Utilities.DebugPublisher.html",
    "title": "Class DebugPublisher | XRC Core",
    "keywords": "Class DebugPublisher Inheritance Object DebugPublisher Namespace : XRC.Core.Utilities Assembly : cs.temp.dll.dll Syntax public class DebugPublisher : MonoBehaviour Methods ToggleDebug() Declaration public void ToggleDebug() Events m_ToggleDebug Declaration public static event Action m_ToggleDebug Event Type Type Description Action"
  },
  "api/XRC.Core.Utilities.DebugPublisherInput.html": {
    "href": "api/XRC.Core.Utilities.DebugPublisherInput.html",
    "title": "Class DebugPublisherInput | XRC Core",
    "keywords": "Class DebugPublisherInput Inheritance Object DebugPublisherInput Namespace : XRC.Core.Utilities Assembly : cs.temp.dll.dll Syntax public class DebugPublisherInput : MonoBehaviour"
  },
  "api/XRC.Core.Utilities.DebugReceiver.html": {
    "href": "api/XRC.Core.Utilities.DebugReceiver.html",
    "title": "Class DebugReceiver | XRC Core",
    "keywords": "Class DebugReceiver Inheritance Object DebugReceiver Namespace : XRC.Core.Utilities Assembly : cs.temp.dll.dll Syntax public class DebugReceiver : MonoBehaviour"
  },
  "api/XRC.Core.Utilities.html": {
    "href": "api/XRC.Core.Utilities.html",
    "title": "Namespace XRC.Core.Utilities | XRC Core",
    "keywords": "Namespace XRC.Core.Utilities Classes DebugPublisher DebugPublisherInput DebugReceiver"
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | XRC Core",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . <!-- Headers should be listed in this order: Added, Changed, Deprecated, Removed, Fixed, Security --> [0.1.2] - 2023-07-26 Added Added dependency on XR Interaction Toolkit. Samples currently depend on XRI, and runtime scripts will also have a dependency on XRI. Changed Changed sample folder name and sample scene name Removed Event System from sample scene and rearranged scene hierarchy [0.1.1] - 2023-07-24 Added Added PoseMarker prefab from OpenXR Plugin. https://docs.unity3d.com/Packages/com.unity.xr.openxr@1.8/manual/index.html [0.1.0] - 2023-07-20 Added Basic Patterns, including Command pattern, Singleton pattern, and Observer pattern. Changed N/A Deprecated N/A Removed List removed features Fixed N/A Security N/A"
  },
  "index.html": {
    "href": "index.html",
    "title": "XRC Core | XRC Core",
    "keywords": "XRC Core Overview <!-- Provide a brief, high-level explanation of the package.--> The XRC Core package is a collection of utility scripts and assets that serve as the foundation for other XRC packages. It provides XRC developers with a core set of tools to streamline the creation of applications, by simplifying the development process and accelerating iteration cycles. Package contents <!-- Include the location of important files you want the user to know about. For example, if this is a sample package containing textures, models, and materials separated by sample group, you might want to provide the folder location of each group.--> These directories, along with their respective files, are organized within the XRC Core package to provide developers with a structured and accessible resources for XR development. Here are some of the important files and their respective locations within the package: <!-- Furthermore, the package incorporates essential math classes that enable complex calculations and operations commonly required in virtual reality and augmented reality applications. These math classes encompass vector and quaternion math, projective geometry, meshes, and other useful scripts, empowering developers to implement advanced visual and spatial computations effortlessly. Runtime - Patterns: This directory houses a comprehensive collection of game design patterns commonly employed in XR development. These patterns serve as reusable templates and methodologies that enhance code organization, maintainability, and extensibility. Developers can find a variety of patterns, such as the Singleton pattern, Observer pattern, State pattern, and more, within this directory. Runtime - Patterns - Command: Within the Patterns directory, the Command subdirectory specifically focuses on the Command pattern. The Command pattern is particularly useful for implementing Undo/Redo command operations. By encapsulating actions or operations into separate command objects, developers can easily track and execute these commands, enabling efficient undo and redo functionality in their XR applications. --> Installation instructions <!-- You can point to the official Package Manager installation instructions, but if you have any special installation requirements, such as installing samples, add them here. --> Use the Unity Package Manager (in Unity’s top menu: Window > Package Manager ) to view which packages are available for installation or already installed in your Project. In addition, you can use this window to see which versions are available, and install, remove, disable, or update packages for each Project. To install using git url, click on the + icon in the top left corner of the Package Manager window. Then select Add package from git URL... and paste the following URL. https://github.com/xrcollaboratory/edu.cornell.xrc.core.git From the package window, you will see the package name, it's description, and a dropdown menu for Samples . Import any Samples that are useful for your project for examples on how the package can be used. Requirements <!-- This is a good place to add hardware or software requirements, including which versions of the Unity Editor this package is compatible with. --> This package should work with most versions of Unity. It has been tested on versions 2021.3 and above. Dependencies: XR Interaction Toolkit, Input System. <!-- ## Limitations If your package has any known limitations, you can list them here. If not, or if the limitations are trivial, exclude this section. --> Workflows <!-- Include a list of steps that the user can easily follow that demonstrates how to use the feature. You can include screenshots to help describe how to use the feature. --> In most cases, you will not need to modify scripts within XRC.Core. Any files in the Package directory are set to Read Only and therefore should not be modified. The recommended workflow is to extend existing classes rather than modify them. This can be done by inheritance or composition. <!-- ## Advanced topics This is where you can provide detailed information about what you are providing to users. This is ideal if you don’t want to overwhelm the user with too much information up front. --> <!-- ## Reference If you have a user interface with a lot of properties, you can provide the details in a reference section. Using tables is a good way to provide quick access to specific property descriptions. --> Samples <!-- For packages that include sample files, you can include detailed information on how the user can use these sample files in their projects and scenes.--> XRC Starter Assets This sample offers a range of materials, models, prefabs, scenes, and other assets that are not shipped with the runtime package scripts. These assets provide a starting point for building virtual environments, saving developers time and effort in the initial setup process. PlayArea This prefab can be used as a standardized scene environment across different projects. See sample scene for usage example. PoseMarker This prefab can be used to indicate a pose of an object by placing it as a child of the object. See sample scene for usage example. <!-- ## Tutorials If you want to provide a walkthrough for a complicated procedure, you can also add them here. Use step-by-step instructions and include images if they can help the user understand. -->"
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| XRC Core",
    "keywords": "MIT License Copyright (c) 2023 XR Collaboratory Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "license/Third Party Notices.html": {
    "href": "license/Third Party Notices.html",
    "title": "This package contains third-party software components governed by the license(s) indicated below: | XRC Core",
    "keywords": "This package contains third-party software components governed by the license(s) indicated below: None"
  }
}